"""Init

Revision ID: 4f58a64a5517
Revises: 
Create Date: 2023-04-18 16:40:06.041148

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4f58a64a5517'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schools',
    sa.Column('school_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('is_using_double_week', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('school_id', name=op.f('pk_schools')),
    sa.UniqueConstraint('name', 'address', name='uq_name_address')
    )
    op.create_index(op.f('ix_schools_school_id'), 'schools', ['school_id'], unique=False)
    op.create_table('teachers',
    sa.Column('teacher_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('teacher_id', name=op.f('pk_teachers'))
    )
    op.create_index(op.f('ix_teachers_teacher_id'), 'teachers', ['teacher_id'], unique=False)
    op.create_table('classes',
    sa.Column('class_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('letter', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], name=op.f('fk_classes_school_id_schools'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('class_id', name=op.f('pk_classes')),
    sa.UniqueConstraint('school_id', 'number', 'letter', name=op.f('uq_classes_school_id'))
    )
    op.create_index(op.f('ix_classes_class_id'), 'classes', ['class_id'], unique=False)
    op.create_table('lessons',
    sa.Column('lesson_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=True),
    sa.Column('weekday', sa.Integer(), nullable=False),
    sa.Column('room', sa.String(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], name=op.f('fk_lessons_school_id_schools'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.teacher_id'], name=op.f('fk_lessons_teacher_id_teachers'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('lesson_id', name=op.f('pk_lessons')),
    sa.UniqueConstraint('name', 'start_time', 'end_time', 'weekday', 'room', 'school_id', 'teacher_id', name=op.f('uq_lessons_name'))
    )
    op.create_index(op.f('ix_lessons_lesson_id'), 'lessons', ['lesson_id'], unique=False)
    op.create_table('semesters',
    sa.Column('semester_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('week_reverse', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.school_id'], name=op.f('fk_semesters_school_id_schools')),
    sa.PrimaryKeyConstraint('semester_id', name=op.f('pk_semesters')),
    sa.UniqueConstraint('school_id', 'start_date', 'end_date', name=op.f('uq_semesters_school_id'))
    )
    op.create_index(op.f('ix_semesters_semester_id'), 'semesters', ['semester_id'], unique=False)
    op.create_table('subgroups',
    sa.Column('subgroup_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.class_id'], name=op.f('fk_subgroups_class_id_classes'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subgroup_id', name=op.f('pk_subgroups')),
    sa.UniqueConstraint('class_id', 'name', name='uq_class_id_name')
    )
    op.create_index(op.f('ix_subgroups_subgroup_id'), 'subgroups', ['subgroup_id'], unique=False)
    op.create_table('lesson_subgroups',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('subgroup_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.lesson_id'], name=op.f('fk_lesson_subgroups_lesson_id_lessons'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['subgroup_id'], ['subgroups.subgroup_id'], name=op.f('fk_lesson_subgroups_subgroup_id_subgroups'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('lesson_id', 'subgroup_id', name=op.f('pk_lesson_subgroups'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lesson_subgroups')
    op.drop_index(op.f('ix_subgroups_subgroup_id'), table_name='subgroups')
    op.drop_table('subgroups')
    op.drop_index(op.f('ix_semesters_semester_id'), table_name='semesters')
    op.drop_table('semesters')
    op.drop_index(op.f('ix_lessons_lesson_id'), table_name='lessons')
    op.drop_table('lessons')
    op.drop_index(op.f('ix_classes_class_id'), table_name='classes')
    op.drop_table('classes')
    op.drop_index(op.f('ix_teachers_teacher_id'), table_name='teachers')
    op.drop_table('teachers')
    op.drop_index(op.f('ix_schools_school_id'), table_name='schools')
    op.drop_table('schools')
    # ### end Alembic commands ###
